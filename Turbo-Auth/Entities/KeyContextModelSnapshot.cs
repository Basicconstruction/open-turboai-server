// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turbo_Auth.Context;

#nullable disable

namespace Turbo_Auth.Entities
{
    [DbContext(typeof(KeyContext))]
    partial class KeyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Turbo_Auth.Models.Ai.Media.NovitaModel", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cover")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<bool>("Nsfw")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sdxl")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("ModelId");

                    b.ToTable("NovitaModels", (string)null);
                });

            modelBuilder.Entity("Turbo_Auth.Models.Suppliers.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("ModelId");

                    b.ToTable("Models", (string)null);
                });

            modelBuilder.Entity("Turbo_Auth.Models.Suppliers.ModelFee", b =>
                {
                    b.Property<int>("ModelFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Fee")
                        .HasColumnType("double");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierKeyId")
                        .HasColumnType("int");

                    b.HasKey("ModelFeeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("SupplierKeyId");

                    b.ToTable("ModelFees", (string)null);
                });

            modelBuilder.Entity("Turbo_Auth.Models.Suppliers.SupplierKey", b =>
                {
                    b.Property<int>("SupplierKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("RequestIdentifier")
                        .HasColumnType("int");

                    b.HasKey("SupplierKeyId");

                    b.ToTable("SupplierKeys", (string)null);
                });

            modelBuilder.Entity("Turbo_Auth.Models.Suppliers.ModelFee", b =>
                {
                    b.HasOne("Turbo_Auth.Models.Suppliers.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turbo_Auth.Models.Suppliers.SupplierKey", "SupplierKey")
                        .WithMany("ModelFees")
                        .HasForeignKey("SupplierKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("SupplierKey");
                });

            modelBuilder.Entity("Turbo_Auth.Models.Suppliers.SupplierKey", b =>
                {
                    b.Navigation("ModelFees");
                });
#pragma warning restore 612, 618
        }
    }
}
